#!/bin/bash

#
# このスクリプトは、指定されたディレクトリ内のすべての.shファイルに対して、
# 特定のパラメータを更新します。
#
# 変更内容:
# 1. --tf_tol の値を 1e-5 から 1e-6 に変更
# 2. --tf_max_iter の値を 1000 から 10000 に変更
#

# --- 設定 ---
# 変更対象のディレクトリを配列で指定
TARGET_DIRS=("scripts_cp" "scripts_ring" "scripts_train")

# --- メイン処理 ---
echo "実験スクリプトのパラメータ更新を開始します..."
echo "----------------------------------------"


# 各ディレクトリに対してループ処理
for dir in "${TARGET_DIRS[@]}"; do
  # ディレクトリの存在を確認
  if [ -d "$dir" ]; then
    echo "処理中のディレクトリ: $dir"

    # findコマンドで対象ディレクトリ内の.shファイルを再帰的に検索し、
    # whileループで1ファイルずつ処理する
    # -print0 と read -r -d $'\0' の組み合わせで、ファイル名にスペース等が含まれていても安全に処理
    find "$dir" -type f -name "*.sh" -print0 | while IFS= read -r -d $'\0' file; do
      echo "  -> ファイルを更新中: $file"

      # sedコマンドでファイル内の文字列を直接置換 (-i オプション)
      # --tf_tol の後のスペースが可変であることを考慮し、' *' を使用
      # 元のフォーマットを維持するため、置換後の文字列にもスペースを適切に挿入
      sed -i 's/--tf_tol  *1e-5/--tf_tol          1e-6/g' "$file"
    #   sed -i 's/--tf_max_iter  *1000/--tf_max_iter       10000/g' "$file"
      # sed -i 's/--tf_reg_lambda  *1e-3/--tf_reg_lambda     0/g' "$file"
    done
    echo "ディレクトリ $dir の処理が完了しました。"
    echo "----------------------------------------"
  else
    # ディレクトリが存在しない場合は警告メッセージを表示
    echo "警告: ディレクトリ '$dir' が見つかりません。スキップします。"
    echo "----------------------------------------"
  fi
done

echo "すべての更新処理が完了しました。"
